---

- hosts: all
  become: true
  vars_files:
    - vars.yml

  tasks:

  - name: Get the platform (i386 or amd64) of the virtual machine
    command: dpkg --print-architecture
    register: print_architecture

  - name: And set the actual platform value as a variable
    set_fact:
      platform: "{{ print_architecture.stdout }}"

  - name: Update and upgrade apt packages
    apt:
      upgrade: safe
      update_cache: yes
      cache_valid_time: 86400 #One day

  - name: Install packages for odk-x and ansible (SLOW)
    apt:
      pkg:
      - unzip
      - vim
      - curl
      - expect
      - python-pexpect
      - openjdk-8-jdk
      - python-pip
      - docker.io
      - maven
      - git
      - software-properties-common
      - gnupg-agent
      - ca-certificates
      - apt-transport-https
      - nodejs
      - npm

  - name: Switch Java version to 8
    shell: update-java-alternatives --set /usr/lib/jvm/java-1.8.0-openjdk-amd64

  - name: Make sure docker autostarts and is started
    service: name=docker enabled=yes state=started

  - name: Install docker for python to handle docker from ansible
    pip: 
      name:
        - docker
        - jsondiff

  - name: Clone odk-x sync-endpoint repo
    git:
      repo: 'https://github.com/opendatakit/sync-endpoint'
      depth: 1
      version: 'master'
      dest: /usr/local/sync-endpoint

  - name: Use maven to build odk-x sync-endpoint (SLOW)
    command: mvn clean install -DskipTests
    args:
      chdir: /usr/local/sync-endpoint

  - name: Clone odk-x default setup repo
    git:
      repo: 'https://github.com/opendatakit/sync-endpoint-default-setup'
      depth: 1
      version: 'master'
      dest: /usr/local/sync-endpoint-default-setup

  - name: Initialize a new swarm with default parameters
    docker_swarm:
      state: present

  - name: Setup odk-x web-ui docker image
    shell: docker build --pull -t odk/sync-web-ui https://github.com/opendatakit/sync-endpoint-web-ui.git
    args:
      chdir: /usr/local

  - name: Setup odk-x db-bootstrap docker image
    docker_image:
      name: odk/db-bootstrap
      build:
        pull: true
        path: /usr/local/sync-endpoint-default-setup/db-bootstrap
      source: build

  - name: Setup odk-x openldap docker image
    docker_image:
      name: odk/openldap
      build:
        pull: true
        path: /usr/local/sync-endpoint-default-setup/openldap
      source: build

  - name: Setup odk-x phpldapadmin docker image
    docker_image:
      name: odk/phpldapadmin
      build:
        pull: true
        path: /usr/local/sync-endpoint-default-setup/phpldapadmin
      source: build

  - name: Update the sync-endpoint server http port
    lineinfile:
      path: /usr/local/sync-endpoint-default-setup/config/sync-endpoint/security.properties
      line: "security.server.port=8081"
      create: true

  - name: Update the nginx listen port
    lineinfile:
      path: /usr/local/sync-endpoint-default-setup/config/nginx/sync-endpoint-http.conf
      regexp: 'listen 80;'
      line: "\tlisten 8081;"

  - name: Updated nginx network port in docker-compose
    lineinfile:
      path: /usr/local/sync-endpoint-default-setup/docker-compose.yml
      regexp: '\- "80:80"'
      line: '      - "8081:8081"'

  - name: Expose postgres port in docker-compose
    blockinfile:
      path: /usr/local/sync-endpoint-default-setup/docker-compose.yml
      marker: "# Ansible was here {mark}"
      insertafter: "      - db-vol:/var/lib/postgresql/data"
      block: |2
            ports:
              - "5432:5432"

  - name: Deploy odk-x docker stack (syncldap)
    docker_stack:
      state: present
      name: syncldap
      compose:
        - /usr/local/sync-endpoint-default-setup/docker-compose.yml

  - name: Wait for odk-x stack to start
    wait_for:
      port: 8081
      delay: 5

  - name: Copy ldif files
    template:
      src: /odk-x-stack/ldap/{{item}}
      dest: /usr/local
    with_items:
      - syncusergroup.ldif
      - syncuseruser.ldif
      - syncadmingroup.ldif
      - syncadminuser.ldif

  - name: Set syncadmin password 
    lineinfile:
      path: /usr/local/syncadminuser.ldif
      regexp: 'userpassword'
      line: 'userpassword: {{ sync_admin_password }}'

  - name: Set syncuser password 
    lineinfile:
      path: /usr/local/syncuseruser.ldif
      regexp: 'userpassword'
      line: 'userpassword: {{ sync_user_password }}'

  - name: Add ldif files to docker container
    shell:
      docker cp /usr/local/{{item}} $(docker ps -f "label=com.docker.swarm.service.name=syncldap_ldap-service" --format '{{ '{{' }}.ID{{ '}}' }}'):/usr/local/{{item}}
    with_items:
      - syncusergroup.ldif
      - syncuseruser.ldif
      - syncadmingroup.ldif
      - syncadminuser.ldif

  - name: Add syncuser to ldap
    shell:
      docker exec $(docker ps -f "label=com.docker.swarm.service.name=syncldap_ldap-service" --format '{{ '{{' }}.ID{{ '}}' }}') ldapmodify -x -D 'cn=admin,dc=example,dc=org' -w admin -c -f /usr/local/{{item}}
    with_items:
      - syncusergroup.ldif
      - syncuseruser.ldif
      - syncadmingroup.ldif
      - syncadminuser.ldif
